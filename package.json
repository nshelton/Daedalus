{
  "name": "usb-serial-plotter",
  "version": "1.0.0",
  "description": "Modern Electron application for USB serial plotting",
  "main": "dist/main.js",
  "scripts": {
    "build:ts": "tsc -p tsconfig.main.json && tsc -p tsconfig.renderer.json && node -e \"const fs=require('fs');const path=require('path');if(!fs.existsSync('dist/renderer'))fs.mkdirSync('dist/renderer',{recursive:true});fs.copyFileSync('dist-renderer/renderer.js','dist/renderer.js');fs.copyFileSync('dist-renderer/Font.js','dist/Font.js');\"",
    "prebuild": "npm run build:ts",
    "start": "npm run build:ts && electron .",
    "dev": "concurrently \"npm run watch:ts\" \"npm run watch:electron\"",
    "watch:ts": "concurrently \"tsc -p tsconfig.main.json --watch\" \"tsc -p tsconfig.renderer.json --watch\"",
    "watch:electron": "wait-on dist/main.js && nodemon --watch dist --exec \"electron . --dev\"",
    "watch": "npm run watch:ts",
    "build": "npm run build:ts && electron-builder",
    "build:win": "npm run build:ts && electron-builder --win",
    "build:mac": "npm run build:ts && electron-builder --mac",
    "build:linux": "npm run build:ts && electron-builder --linux"
  },
  "keywords": [
    "electron",
    "serial",
    "plotter",
    "usb"
  ],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^20.10.0",
    "concurrently": "^8.2.2",
    "electron": "^28.0.0",
    "electron-builder": "^24.9.1",
    "electron-reload": "^2.0.0-alpha.1",
    "nodemon": "^3.0.2",
    "typescript": "^5.3.3",
    "wait-on": "^7.2.0"
  },
  "dependencies": {
    "@serialport/bindings-cpp": "^12.0.1",
    "@types/serialport": "^8.0.5",
    "serialport": "^12.0.0"
  },
  "build": {
    "appId": "com.usb-serial-plotter",
    "productName": "USB Serial Plotter",
    "files": [
      "dist/**/*",
      "index.html",
      "styles.css",
      "assets/**/*",
      "package.json"
    ],
    "directories": {
      "output": "build"
    },
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "assets/icon.ico"
    },
    "mac": {
      "target": [
        "dmg"
      ],
      "icon": "assets/icon.icns"
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "icon": "assets/icon.png"
    }
  }
}